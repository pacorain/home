# Wixann lights
#
# I have these set up in cloud-shaped shades in my child's room.

esp8266:
  board: esp01_1m

packages:
  device_base: !include ../config/device_base.yaml

esphome:
  on_loop:
    - lambda: |-
        static bool nightlight = false;
        float _r, _g, _b, _cw, _ww;
        id(cloud).current_values_as_rgbww(&_r, &_g, &_b, &_cw, &_ww, false);
        float max_value = max(max(_r, _g), max(_b, max(_cw, _ww)));
        if (max_value < 0.01f && max_value > 0.0f && !nightlight) {
          ESP_LOGD("cloud_lamp", "Turning on nightlight mode");
          id(ww).update_frequency(60.0f);
          nightlight = true;
        } else if (nightlight && max_value > 0.01f) {
          ESP_LOGD("cloud_lamp", "Turning off nightlight mode");
          id(ww).update_frequency(288.0f);
          nightlight = false;
        }

.defs:
  pwm: &pwm
    platform: esp8266_pwm
    frequency: 288 Hz

output:
  - <<: *pwm
    pin: GPIO04
    id: r
  - <<: *pwm
    pin: GPIO12
    id: g
  - <<: *pwm
    pin: GPIO14
    id: b
  - <<: *pwm
    pin: GPIO05
    id: cw
  - <<: *pwm
    pin: GPIO13
    id: ww

button:
  - platform: template
    name: "Nightlight mode"
    on_press:
      - light.turn_on: 
          id: cloud
          brightness: 0.039%
          red: 0%
          green: 0%
          blue: 0%
          cold_white: 0%
          warm_white: 100%

light:
  - platform: rgbww
    name: "${friendly_name}"
    red: r
    green: g
    blue: b
    cold_white: cw
    warm_white: ww
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2700 K
    constant_brightness: true
    restore_mode: RESTORE_INVERTED_DEFAULT_OFF
    id: cloud
    icon: mdi:cloud
    gamma_correct: 2.8
    effects:
      - random:
          name: Colorful
          transition_length: 5s
          update_interval: 7s
      - lambda:
          name: Party Mode
          update_interval: 429ms
          lambda: |-
            auto call = id(cloud).turn_on();
            call.set_cold_white(0.0);
            call.set_warm_white(0.0);
            call.set_color_brightness(1.0);
            call.set_rgb(random_float(), random_float(), random_float());
            call.set_transition_length(0);
            call.perform();